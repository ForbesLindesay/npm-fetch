{
  "name": "fetch-file",
  "version": "1.0.1",
  "description": "Download from an http server to a local file.",
  "scripts": {
    "test": "mocha -R list"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/ForbesLindesay/fetch-file.git"
  },
  "license": "BSD",
  "optionalDependencies": {
    "graceful-fs": "1.2"
  },
  "devDependencies": {
    "mocha": "~1.9.0",
    "rimraf": "~2.1.4",
    "sha": "~1.0.0"
  },
  "dependencies": {
    "once": "~1.1.1",
    "mkdirp": "~0.3.5",
    "request": "~2.20.0",
    "graceful-fs": "1.2"
  },
  "readme": "# Fetch File\r\n\r\nDownload from an http server to a local file.\r\n\r\n[![Build Status](https://travis-ci.org/ForbesLindesay/fetch-file.png?branch=master)](https://travis-ci.org/ForbesLindesay/fetch-file)\r\n[![Dependency Status](https://gemnasium.com/ForbesLindesay/fetch-file.png)](https://gemnasium.com/ForbesLindesay/fetch-file)\r\n\r\n## Installation\r\n\r\n    $ npm install fetch-file\r\n\r\n## API\r\n\r\n### fetch(remote, local, [options,] cb)\r\n\r\nDownload from `remote` to `local`.\r\n\r\n`remote` is an options object to be passed to [request](https://github.com/mikeal/request#requestoptions-callback).  This includes `uri`, `qs`, `method`, `headers` etc...\r\n\r\n`local` is the path to a local file.  Its directory will be created using mkdirp if it does not already exist.\r\n\r\nOptions:\r\n\r\n - `mode` The mode to create files with (default: 0666)\r\n\r\n## License\r\n\r\nBSD\r\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/ForbesLindesay/fetch-file/issues"
  },
  "_id": "fetch-file@1.0.1",
  "dist": {
    "shasum": "b4f34398e122c677b0c4ea20b332b9126a224b36"
  },
  "_from": "fetch-file@~1.0.1",
  "_resolved": "http://registry.npmjs.org/fetch-file/-/fetch-file-1.0.1.tgz"
}
